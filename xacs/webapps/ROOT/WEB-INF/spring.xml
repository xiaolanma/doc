<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:amq="http://activemq.apache.org/schema/core"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	 <bean id="nativeJdbcExtractor"
	         class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor">
	 </bean>

	<bean id="defaultLobHandler"
	           class="org.springframework.jdbc.support.lob.DefaultLobHandler">
	 </bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		 <property name="lobHandler" ref="defaultLobHandler"/>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
       	<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
    </bean>


	<bean id="baseDAO" class="x.acs.dao.BaseDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	
	<bean id="baseDAOProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="target">
			<ref local="baseDAO" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>   
     
    
	<context:component-scan base-package="x.acs" />
	

    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <!-- define the SqlSessionFactory 
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>
-->

<!-- ============================auto generate by DaoCfgGenerator============================================================ -->


<!--	AreaDAO		x.acs.dao.AreaDAO		-->
	<bean id="AreaDAO" class="x.acs.dao.AreaDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	ATMErrorsStatsDAO		x.acs.dao.ATMErrorsStatsDAO		-->
	<bean id="ATMErrorsStatsDAO" class="x.acs.dao.ATMErrorsStatsDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	BackupDAO		x.acs.dao.BackupDAO		-->
	<bean id="BackupDAO" class="x.acs.dao.BackupDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	ConfigurationDAO		x.acs.dao.ConfigurationDAO		-->
	<bean id="ConfigurationDAO" class="x.acs.dao.ConfigurationDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	DataModelDAO		x.acs.dao.DataModelDAO		-->
	<bean id="DataModelDAO" class="x.acs.dao.DataModelDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	DeviceProfile2SoftwareDAO		x.acs.dao.DeviceProfile2SoftwareDAO		-->
	<bean id="DeviceProfile2SoftwareDAO" class="x.acs.dao.DeviceProfile2SoftwareDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	DeviceProfileDAO		x.acs.dao.DeviceProfileDAO		-->
	<bean id="DeviceProfileDAO" class="x.acs.dao.DeviceProfileDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	DSLStatsDAO		x.acs.dao.DSLStatsDAO		-->
	<bean id="DSLStatsDAO" class="x.acs.dao.DSLStatsDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	HardwareModelDAO		x.acs.dao.HardwareModelDAO		-->
	<bean id="HardwareModelDAO" class="x.acs.dao.HardwareModelDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	Host2ServiceDAO		x.acs.dao.Host2ServiceDAO		-->
	<bean id="Host2ServiceDAO" class="x.acs.dao.Host2ServiceDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	HostPropertyDAO		x.acs.dao.HostPropertyDAO		-->
	<bean id="HostPropertyDAO" class="x.acs.dao.HostPropertyDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	HostsDAO		x.acs.dao.HostsDAO		-->
	<bean id="HostsDAO" class="x.acs.dao.HostsDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	MsgRecordDAO		x.acs.dao.MsgRecordDAO		-->
	<bean id="MsgRecordDAO" class="x.acs.dao.MsgRecordDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	OuiMapDAO		x.acs.dao.OuiMapDAO		-->
	<bean id="OuiMapDAO" class="x.acs.dao.OuiMapDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	ProfilePropertyDAO		x.acs.dao.ProfilePropertyDAO		-->
	<bean id="ProfilePropertyDAO" class="x.acs.dao.ProfilePropertyDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	PropertyDAO		x.acs.dao.PropertyDAO		-->
	<bean id="PropertyDAO" class="x.acs.dao.PropertyDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	ScriptDAO		x.acs.dao.ScriptDAO		-->
	<bean id="ScriptDAO" class="x.acs.dao.ScriptDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	ServiceDAO		x.acs.dao.ServiceDAO		-->
	<bean id="ServiceDAO" class="x.acs.dao.ServiceDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	ServicePropertyDAO		x.acs.dao.ServicePropertyDAO		-->
	<bean id="ServicePropertyDAO" class="x.acs.dao.ServicePropertyDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	SoftwareDAO		x.acs.dao.SoftwareDAO		-->
	<bean id="SoftwareDAO" class="x.acs.dao.SoftwareDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	SoftwareDetailDAO		x.acs.dao.SoftwareDetailDAO		-->
	<bean id="SoftwareDetailDAO" class="x.acs.dao.SoftwareDetailDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	TemplateDAO		x.acs.dao.TemplateDAO		-->
	<bean id="TemplateDAO" class="x.acs.dao.TemplateDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	
<!--	UpgradeTaskDAO		x.acs.dao.UpgradeTaskDAO		-->
	<bean id="UpgradeTaskDAO" class="x.acs.dao.UpgradeTaskDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	
<!--	UserDAO		x.acs.dao.UserDAO		-->
	<bean id="UserDAO" class="x.acs.dao.UserDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

<!--	UserGroupDAO		x.acs.dao.UserGroupDAO		-->
	<bean id="UserGroupDAO" class="x.acs.dao.UserGroupDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>


<!--	DataModelFileDAO		x.acs.dao.DataModelFileDAO		-->
	<bean id="DataModelFileDAO" class="x.acs.dao.DataModelFileDAO">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	
<!-- ============================auto generate by DaoCfgGenerator============================================================ -->




<amq:broker useJmx="false" persistent="false">
    <amq:transportConnectors>
      <amq:transportConnector uri="tcp://localhost:0" />
    </amq:transportConnectors>
  </amq:broker>
  
  <amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost"/>
  
  <amq:queue id="destination"  physicalName="org.apache.activemq.spring.Test.spring.embedded"/>
  
  <!-- Spring JMS Template -->
  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory">
      <!-- lets wrap in a pool to avoid creating a connection per send -->
      <bean class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory">
          <ref local="jmsFactory" />
        </property>
      </bean>
    </property>
  </bean>

  <bean id="consumerJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="jmsFactory"/>
  </bean>



</beans>
